#include <input/processors.dtsi>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4 // 各自のマウスレイヤーに合わせて設定

&mkp_input_listener { input-processors = <&zip_temp_layer MOUSE 250>; };

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

// #includeのあとのあたりにスクロール量変更の定義を追記

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mkp_input_listener { input-processors = <&zip_temp_layer 4 10000>; };

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    // combosやmacrosと同じ階層に以下のbihaviorsを追記
    // スクロール方向を逆にしたい場合は <&msc SCRL_DOWN> と <&msc SCRL_UP> を入れ替えてください

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };
    };

    macros {
        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E         &kp R             &kp T                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LSHIFT A      &kp S      &kp D         &kp F             &kp G      &mt END HOME              &lt 3 DELETE  &kp H        &kp J  &lt 3 K    &kp L    &lt 3 MINUS
&mt LEFT_SHIFT Z  &kp X      &kp C         &kp V             &kp B      &lt 6 COLON               &lt 6 SEMI    &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LEFT_GUI      &kp SPACE  &kp LEFT_ALT  &kp LEFT_CONTROL  &lt 4 TAB  &mt LEFT_SHIFT GRAVE      &lt 2 ENTER   &lt 1 SPACE                             &kp QUESTION
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        arrow-character {
            bindings = <
&kp ESC        &kp EXCLAMATION  &kp AT_SIGN  &kp HASH           &kp DOLLAR                                               &kp DOUBLE_QUOTES  &none             &kp UP_ARROW   &kp JP_YEN        &kp BACKSPACE
&kp AMPERSAND  &kp PERCENT      &kp CARET    &kp ASTERISK       &kp LEFT_PARENTHESIS  &trans                 &kp DELETE  &kp PLUS           &kp LEFT_ARROW    &kp DOWN       &kp RIGHT         &kp LEFT_BRACKET
&kp PLUS       &kp RIGHT_BRACE  &kp PIPE     &kp RIGHT_BRACKET  &kp BACKSLASH         &kp JP_UNDERSCORE      &kp UNDER   &kp SEMI           &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp JP_PIPE
&trans         &trans           &trans       &trans             &trans                &trans                 &trans      &trans                                                                &kp JP_PIPE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp F1  &kp F2   &kp F3   &kp F4                                            &kp KP_PLUS      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp BACKSPACE
&kp PRINTSCREEN             &kp F5  &kp F6   &kp F7   &kp F8   &kp LC(LA(KP_NUMBER_0))      &kp DELETE  &kp KP_ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS
&mt LEFT_SHIFT KP_NUMBER_0  &kp F9  &kp F10  &kp F11  &kp F12  &kp EQUAL                    &kp SLASH   &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0
&trans                      &trans  &trans   &trans   &trans   &trans                       &trans      &trans                                                              &kp PIPE
            >;
        };

        config {
            bindings = <
&none           &none                   &kp UP_ARROW    &kp LC(TAB)              &trans                                 &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &bootloader      &trans       &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_SEL 4
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &sys_reset       &bootloader  &bt BT_CLR     &trans         &trans         &trans         &trans
&trans          &trans                  &trans          &trans                   &trans   &trans           &trans       &trans                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &mo 5   &mkp MB1
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &mkp MB2
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Shortcut {
            bindings = <
&trans  &trans         &kp RG(E)  &trans         &kp RG(UP_ARROW)                      &kp RG(RS(LEFT))  &kp RS(RG(RIGHT))  &none           &none  &none
&trans  &kp LC(LS(S))  &trans     &kp LA(RIGHT)  &kp RA(LEFT)      &trans      &none   &kp RG(TAB)       &kp RC(RG(D))      &kp RG(RC(F4))  &none  &none
&trans  &none          &none      &kp RG(V)      &kp RC(RS(N))     &trans      &none   &kp RC(RG(LEFT))  &kp RG(RC(RIGHT))  &none           &none  &none
&trans  &trans         &trans     &trans         &kp LC(LA(TAB))   &trans      &trans  &trans                                                      &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };
    };
};
